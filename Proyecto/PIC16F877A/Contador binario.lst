CCS PCM C Compiler, Version 5.115d, 1               29-ago.-23 14:32
Compiler operating in Evaluation Mode
To obtain a fully enabled compiler visit www.ccsinfo.com/products

               Filename:   C:\Users\victo\OneDrive\Documentos\X-TRAINER-hands-on\CCS\PIC16F\4-Contador-binario-CCS-PIC16F887-877A\Proyecto\PIC16F877A\Contador binario.lst

               ROM used:   64 words (1%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           7 (2%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   018
0003:  NOP
.................... /************************************************************************************************
.................... Company:
.................... Microside Technology Inc.
.................... File Name:
.................... Contador binario.c
.................... Product Revision  :  1
.................... Device            :  X-TRAINER
.................... Driver Version    :  1.0
.................... ************************************************************************************************/
.................... 
.................... /*
.................... ------------------------------------------------------------------------------------------
....................  Implementar un contador binario que incrementará cada vez que se presione un botón,
....................  este será configurado como entrada digital. Para visualizar el conteo se utilizan 8 LEDs.
.................... ------------------------------------------------------------------------------------------
.................... */
.................... 
.................... #include <16F877A.h>                  //Incluye el microcontrolador con el que se va a trabajar 
.................... //////////// Standard Header file for the PIC16F877A device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F877A
.................... 
.................... #list
.................... 
.................... #use delay (clock=20Mhz, crystal )    //Tipo de oscilador y frecuencia dependiendo del microcontrolador 
0004:  MOVLW  21
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  06
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  7B
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  RETURN
.................... 
.................... #define Boton PIN_A2                  //Asigna el pin A2 al boton BOOT del X-TRAINER
.................... 
.................... byte cont = 0;
....................  
.................... void main ( void ) {
0018:  MOVF   03,W
0019:  ANDLW  1F
001A:  MOVWF  03
001B:  CLRF   20
001C:  BSF    03.5
001D:  BSF    1F.0
001E:  BSF    1F.1
001F:  BSF    1F.2
0020:  BCF    1F.3
0021:  MOVLW  07
0022:  MOVWF  1C
0023:  BCF    03.7
....................    set_tris_b ( 0b00000000 );         //Configura todo el puerto B como salida
0024:  MOVLW  00
0025:  MOVWF  06
....................    set_tris_a ( 0b11111111 );         //Configura todo el puerto A como entrada
0026:  MOVLW  FF
0027:  MOVWF  05
.................... 
....................    while ( 1 ) {                      //Mientras sea verdadero se ejecuta el siguiente código
....................       if ( !input ( Boton ) ) {       //Si el botón está presionado
0028:  BSF    05.2
0029:  BCF    03.5
002A:  BTFSC  05.2
002B:  GOTO   03D
....................         cont++;                       //Se incrementa el contador
002C:  INCF   20,F
....................         output_b ( cont );            //Se asigna el valor del cont al puerto B y se despliega el valor
002D:  BSF    03.5
002E:  CLRF   06
002F:  BCF    03.5
0030:  MOVF   20,W
0031:  MOVWF  06
....................         Delay_ms ( 5 );               //Retardo
0032:  MOVLW  05
0033:  MOVWF  21
0034:  CALL   004
....................         while ( !input ( Boton ) );   //Mientras el botón se mantenga presionado
0035:  BSF    03.5
0036:  BSF    05.2
0037:  BCF    03.5
0038:  BTFSS  05.2
0039:  GOTO   035
....................         Delay_ms ( 5 );               //Retardo
003A:  MOVLW  05
003B:  MOVWF  21
003C:  CALL   004
....................      }
003D:  BSF    03.5
003E:  GOTO   028
....................    }
.................... }
003F:  SLEEP

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
